@page "/settings/groups/{GroupId}"
@inherits Settings._Components.SettingsComponentBase

@if (GroupDto == null)
{
    <div>
        <Spinner class="mt-5"></Spinner>
    </div>
}
else
{
    <h2 class="mb-0">Editing group <span class="text-primary">@GroupDto.DisplayName</span></h2>
    <p class="text-muted mb-0">@GroupDto.Name</p>

    <h3 class="mt-3">General</h3>
    <EditForm Model="ViewModel" OnValidSubmit="SaveGroupAsync" class="mt-2">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <BytexDigital.Blazor.Components.FormValidators.ManualFormValidator TModel="GroupModel" @ref="Validator" />

        <div class="card">
            <div class="card-body">
                <div class="form-group">
                    <label class="input-label">Display Name</label>
                    <InputText @bind-Value="ViewModel.DisplayName" class="form-control" placeholder="Display name"></InputText>
                    <ValidationMessage For="() => ViewModel.DisplayName" />
                </div>

                <div class="form-group">
                    <label class="input-label">Name</label>
                    <InputText @bind-Value="ViewModel.Name" class="form-control" placeholder="Unique name"></InputText>
                    <ValidationMessage For="() => ViewModel.Name" />
                </div>

                <div class="d-flex justify-content-md-between">
                    <button class="btn btn-ghost-danger" type="button" @onclick="DeleteGroupAsync">Delete</button>
                    <button class="btn btn-primary btn-wide" type="submit"><i class="fas fa-save mr-3"></i>Save</button>
                </div>
            </div>
        </div>
    </EditForm>

    @if (ServerDtos == default)
    {
        <Spinner class="mt-5" Text="Loading servers.."></Spinner>
    }
    else
    {
        <h3 class="mt-4">Server permissions</h3>

        foreach (var nodeData in ServerDtos.OrderBy(x => x.Key.DisplayName))
        {
            var node = nodeData.Key;
            var servers = nodeData.Value;

            foreach (var server in servers.OrderBy(x => x.DisplayName))
            {
                <div class="card border mb-1">
                    <div class="card-header card-collapse" id="coursesHeadingOne">
                        <a class="btn btn-link btn-sm btn-block card-btn p-3" href="javascript:;" role="button" data-toggle="collapse" data-target="#@server.Id">
                            <!-- Header -->
                            <span class="row">
                                <span class="col-8">
                                    <span class="media">
                                        <span class="card-btn-toggle mr-3 ml-0">
                                            <span class="card-btn-toggle-default">+</span>
                                            <span class="card-btn-toggle-active">−</span>
                                        </span>
                                        <span class="media-body">
                                            <span class="text-body p mb-0 font-weight-bold mr-5">@server.DisplayName</span>
                                        </span>
                                    </span>
                                </span>
                                <span class="col-4 text-right">
                                    <span class="text-muted">Running on @node.DisplayName</span>
                                </span>
                            </span>
                            <!-- End Header -->
                        </a>
                    </div>
                    <div id="@server.Id.ToString()" class="collapse">
                        <div class="card-body">
                            <BytexDigital.RGSM.Panel.Client.Pages.Settings.Groups._Components.ServerPermissions Server="server" Node="node" />
                        </div>
                    </div>
                </div>
            }
        }
    }
}